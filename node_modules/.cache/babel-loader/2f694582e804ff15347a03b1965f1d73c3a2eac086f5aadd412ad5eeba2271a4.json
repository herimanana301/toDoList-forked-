{"ast":null,"code":"var _jsxFileName = \"/Users/landy/Desktop/selfProject/toDoList_project/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch tasks when the component mounts\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/api/tasks') // Full URL for Flask API\n    .then(response => response.json()).then(data => {\n      console.log('API Response:', data); // Log the API response to confirm submission\n\n      // If the task was successfully added to the server, update the list\n      if (data.status === 'success') {\n        addNewTask(taskData); // Pass the new task to the parent component to update the list\n      }\n    } // Make sure data.tasks is correctly accessed\n    ).catch(error => console.error('Error fetching tasks:', error));\n  }, []);\n\n  // Callback to add a new task dynamically\n  const addNewTask = newTask => {\n    console.log('PREVIOUS:', tasks); // Log current tasks\n\n    // Update the state and log the new task added to the state\n    setTasks(prevTasks => {\n      const updatedTasks = [...prevTasks, newTask]; // Add new task to the array\n      console.log('Updated tasks after adding:', updatedTasks); // Log the updated tasks list\n      return updatedTasks; // Update the state\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), \"(Priority: \", task.priority, \", Category: \", task.category, \", Deadline: \", task.deadline ? task.deadline : 'No deadline', \")\", task.completed ? \" [✓]\" : \" [✗]\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","fetch","then","response","json","data","console","log","status","addNewTask","taskData","catch","error","newTask","prevTasks","updatedTasks","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","task","index","description","priority","category","deadline","completed","_c","$RefreshReg$"],"sources":["/Users/landy/Desktop/selfProject/toDoList_project/src/components/ToDoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ToDoList = () => {\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch tasks when the component mounts\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/api/tasks')  // Full URL for Flask API\n      .then(response => response.json())\n      .then(data => {\n       \n          console.log('API Response:', data);  // Log the API response to confirm submission\n  \n          // If the task was successfully added to the server, update the list\n          if (data.status === 'success') {\n            addNewTask(taskData);  // Pass the new task to the parent component to update the list\n          }\n        } // Make sure data.tasks is correctly accessed\n      )\n      .catch(error => console.error('Error fetching tasks:', error));\n  }, []);\n\n  // Callback to add a new task dynamically\n  const addNewTask = (newTask) => {\n    console.log('PREVIOUS:', tasks);  // Log current tasks\n  \n    // Update the state and log the new task added to the state\n    setTasks((prevTasks) => {\n      const updatedTasks = [...prevTasks, newTask];  // Add new task to the array\n      console.log('Updated tasks after adding:', updatedTasks);  // Log the updated tasks list\n      return updatedTasks;  // Update the state\n    });\n  };\n  \n\n\n  return (\n    <div>\n      <h2>Task List hello</h2>\n      {tasks.length > 0 ? (\n        <ul>\n          {tasks.map((task, index) => (\n            <li key={index}>\n              <strong>{task.description}</strong> \n              (Priority: {task.priority}, \n              Category: {task.category}, \n              Deadline: {task.deadline ? task.deadline : 'No deadline'}) \n              {task.completed ? \" [✓]\" : \" [✗]\"}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No tasks available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default ToDoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,iCAAiC,CAAC,CAAE;IAAA,CACvCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MAEVC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC,CAAC,CAAE;;MAErC;MACA,IAAIA,IAAI,CAACG,MAAM,KAAK,SAAS,EAAE;QAC7BC,UAAU,CAACC,QAAQ,CAAC,CAAC,CAAE;MACzB;IACF,CAAC,CAAC;IACJ,CAAC,CACAC,KAAK,CAACC,KAAK,IAAIN,OAAO,CAACM,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMH,UAAU,GAAII,OAAO,IAAK;IAC9BP,OAAO,CAACC,GAAG,CAAC,WAAW,EAAER,KAAK,CAAC,CAAC,CAAE;;IAElC;IACAC,QAAQ,CAAEc,SAAS,IAAK;MACtB,MAAMC,YAAY,GAAG,CAAC,GAAGD,SAAS,EAAED,OAAO,CAAC,CAAC,CAAE;MAC/CP,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEQ,YAAY,CAAC,CAAC,CAAE;MAC3D,OAAOA,YAAY,CAAC,CAAE;IACxB,CAAC,CAAC;EACJ,CAAC;EAID,oBACEnB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBrB,KAAK,CAACsB,MAAM,GAAG,CAAC,gBACfzB,OAAA;MAAAoB,QAAA,EACGjB,KAAK,CAACuB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB5B,OAAA;QAAAoB,QAAA,gBACEpB,OAAA;UAAAoB,QAAA,EAASO,IAAI,CAACE;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACxB,EAACG,IAAI,CAACG,QAAQ,EAAC,cAChB,EAACH,IAAI,CAACI,QAAQ,EAAC,cACf,EAACJ,IAAI,CAACK,QAAQ,GAAGL,IAAI,CAACK,QAAQ,GAAG,aAAa,EAAC,GACzD,EAACL,IAAI,CAACM,SAAS,GAAG,MAAM,GAAG,MAAM;MAAA,GAL1BL,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELxB,OAAA;MAAAoB,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CAtDID,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAwDd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}