{"ast":null,"code":"var _jsxFileName = \"/Users/landy/Desktop/selfProject/toDoList_project/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client'; // Import socket.io-client\nimport './ToDoList.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null); // Track the selected task\n\n  // Fetch tasks from the backend\n  useEffect(() => {\n    const socket = io('http://127.0.0.1:5000');\n    fetch('http://127.0.0.1:5000/api/tasks').then(response => response.json()).then(data => setTasks(data.tasks)).catch(error => console.error('Error fetching tasks:', error));\n\n    // Listen for real-time updates\n    socket.on('task_update', newTask => {\n      setTasks(prevTasks => [...prevTasks, newTask]);\n    });\n    socket.on('task_deleted', ({\n      task_id\n    }) => {\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== task_id));\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  // Function to delete a task\n  const deleteTask = task_id => {\n    fetch(`http://127.0.0.1:5000/api/tasks/${task_id}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(data => {\n      console.log('Task deleted:', data.message);\n      setSelectedTask(null); // Deselect task after deletion\n    }).catch(error => console.error('Error deleting task:', error));\n  };\n\n  // Handle task click (to show delete option)\n  const handleTaskClick = task_id => {\n    if (selectedTask === task_id) {\n      setSelectedTask(null); // Deselect task if clicked again\n    } else {\n      setSelectedTask(task_id); // Select task to show delete button\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        // Use the task's unique ID as the key\n        className: `task-item ${selectedTask === task.id ? 'selected' : ''}`,\n        onClick: () => handleTaskClick(task.id) // Pass the task ID\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"task-details\",\n            children: [\"(Priority: \", task.priority, \", Category: \", task.category, \", Deadline: \", task.deadline ? task.deadline : 'No deadline', \")\", task.completed ? \" [✓]\" : \" [✗]\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), selectedTask === task.id && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: e => {\n            e.stopPropagation(); // Prevent triggering task click\n            deleteTask(task.id); // Use the task ID for deletion\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoList, \"Cvg8ZAXndLj8UIebRFAblQ+N89M=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","selectedTask","setSelectedTask","socket","fetch","then","response","json","data","catch","error","console","on","newTask","prevTasks","task_id","filter","task","id","disconnect","deleteTask","method","log","message","handleTaskClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","description","priority","category","deadline","completed","e","stopPropagation","_c","$RefreshReg$"],"sources":["/Users/landy/Desktop/selfProject/toDoList_project/src/components/ToDoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';  // Import socket.io-client\nimport './ToDoList.css';  // Import the CSS file for styling\n\nconst ToDoList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);  // Track the selected task\n\n  // Fetch tasks from the backend\n  useEffect(() => {\n    const socket = io('http://127.0.0.1:5000');\n\n    fetch('http://127.0.0.1:5000/api/tasks')\n      .then(response => response.json())\n      .then(data => setTasks(data.tasks))\n      .catch(error => console.error('Error fetching tasks:', error));\n\n    // Listen for real-time updates\n    socket.on('task_update', (newTask) => {\n      setTasks(prevTasks => [...prevTasks, newTask]);\n    });\n\n    socket.on('task_deleted', ({ task_id }) => {\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== task_id));\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  // Function to delete a task\n  const deleteTask = (task_id) => {\n    fetch(`http://127.0.0.1:5000/api/tasks/${task_id}`, {\n      method: 'DELETE',\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log('Task deleted:', data.message);\n        setSelectedTask(null);  // Deselect task after deletion\n      })\n      .catch(error => console.error('Error deleting task:', error));\n  };\n\n  // Handle task click (to show delete option)\n  const handleTaskClick = (task_id) => {\n    if (selectedTask === task_id) {\n      setSelectedTask(null);  // Deselect task if clicked again\n    } else {\n      setSelectedTask(task_id);  // Select task to show delete button\n    }\n  };\n\n  return (\n    <div className=\"todo-container\">\n      <h2>Task List</h2>\n      {tasks.length > 0 ? (\n        <ul className=\"task-list\">\n          {tasks.map((task) => (\n            <li \n              key={task.id}  // Use the task's unique ID as the key\n              className={`task-item ${selectedTask === task.id ? 'selected' : ''}`}\n              onClick={() => handleTaskClick(task.id)}  // Pass the task ID\n            >\n              <div>\n                <strong>{task.description}</strong> \n                <span className=\"task-details\">\n                  (Priority: {task.priority}, Category: {task.category}, Deadline: {task.deadline ? task.deadline : 'No deadline'})\n                  {task.completed ? \" [✓]\" : \" [✗]\"}\n                </span>\n              </div>\n              {/* Show delete button only when the task is selected */}\n              {selectedTask === task.id && (\n                <button \n                  className=\"delete-button\" \n                  onClick={(e) => {\n                    e.stopPropagation();  // Prevent triggering task click\n                    deleteTask(task.id);   // Use the task ID for deletion\n                  }}\n                >\n                  Delete\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No tasks available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}