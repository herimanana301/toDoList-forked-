{"ast":null,"code":"var _jsxFileName = \"/Users/landy/Desktop/selfProject/toDoList_project/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client'; // Import socket.io-client\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    // Connect to WebSocket server (change URL if necessary)\n    const socket = io('http://127.0.0.1:5000');\n\n    // Fetch initial tasks from REST API\n    fetch('http://127.0.0.1:5000/api/tasks').then(response => response.json()).then(data => setTasks(data.tasks)).catch(error => console.error('Error fetching tasks:', error));\n\n    // Listen for new task updates\n    socket.on('task_update', newTask => {\n      setTasks(prevTasks => [...prevTasks, newTask]); // Add new task to task list\n    });\n\n    // Listen for task deletion\n    socket.on('task_deleted', ({\n      task_id\n    }) => {\n      setTasks(prevTasks => prevTasks.filter((task, index) => index !== task_id));\n    });\n\n    // Listen for task completion\n    socket.on('task_completed', ({\n      task_id\n    }) => {\n      setTasks(prevTasks => prevTasks.map((task, index) => index === task_id ? {\n        ...task,\n        completed: true\n      } : task));\n    });\n\n    // Cleanup WebSocket connection on component unmount\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), \"(Priority: \", task.priority, \", Category: \", task.category, \", Deadline: \", task.deadline ? task.deadline : 'No deadline', \")\", task.completed ? \" [✓]\" : \" [✗]\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","socket","fetch","then","response","json","data","catch","error","console","on","newTask","prevTasks","task_id","filter","task","index","map","completed","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","length","description","priority","category","deadline","_c","$RefreshReg$"],"sources":["/Users/landy/Desktop/selfProject/toDoList_project/src/components/ToDoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';  // Import socket.io-client\n\nconst ToDoList = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    // Connect to WebSocket server (change URL if necessary)\n    const socket = io('http://127.0.0.1:5000');\n\n    // Fetch initial tasks from REST API\n    fetch('http://127.0.0.1:5000/api/tasks')\n      .then(response => response.json())\n      .then(data => setTasks(data.tasks))\n      .catch(error => console.error('Error fetching tasks:', error));\n\n    // Listen for new task updates\n    socket.on('task_update', (newTask) => {\n      setTasks(prevTasks => [...prevTasks, newTask]);  // Add new task to task list\n    });\n\n    // Listen for task deletion\n    socket.on('task_deleted', ({ task_id }) => {\n      setTasks(prevTasks => prevTasks.filter((task, index) => index !== task_id));\n    });\n\n    // Listen for task completion\n    socket.on('task_completed', ({ task_id }) => {\n      setTasks(prevTasks => prevTasks.map((task, index) =>\n        index === task_id ? { ...task, completed: true } : task\n      ));\n    });\n\n    // Cleanup WebSocket connection on component unmount\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  return (\n    <div>\n      <h2>Task List</h2>\n      {tasks.length > 0 ? (\n        <ul>\n          {tasks.map((task, index) => (\n            <li key={index}>\n              <strong>{task.description}</strong> \n              (Priority: {task.priority}, \n              Category: {task.category}, \n              Deadline: {task.deadline ? task.deadline : 'No deadline'}) \n              {task.completed ? \" [✓]\" : \" [✗]\"}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No tasks available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default ToDoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,kBAAkB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,MAAM,GAAGP,EAAE,CAAC,uBAAuB,CAAC;;IAE1C;IACAQ,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIN,QAAQ,CAACM,IAAI,CAACP,KAAK,CAAC,CAAC,CAClCQ,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;;IAEhE;IACAP,MAAM,CAACS,EAAE,CAAC,aAAa,EAAGC,OAAO,IAAK;MACpCX,QAAQ,CAACY,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC,CAAC,CAAE;IACnD,CAAC,CAAC;;IAEF;IACAV,MAAM,CAACS,EAAE,CAAC,cAAc,EAAE,CAAC;MAAEG;IAAQ,CAAC,KAAK;MACzCb,QAAQ,CAACY,SAAS,IAAIA,SAAS,CAACE,MAAM,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKA,KAAK,KAAKH,OAAO,CAAC,CAAC;IAC7E,CAAC,CAAC;;IAEF;IACAZ,MAAM,CAACS,EAAE,CAAC,gBAAgB,EAAE,CAAC;MAAEG;IAAQ,CAAC,KAAK;MAC3Cb,QAAQ,CAACY,SAAS,IAAIA,SAAS,CAACK,GAAG,CAAC,CAACF,IAAI,EAAEC,KAAK,KAC9CA,KAAK,KAAKH,OAAO,GAAG;QAAE,GAAGE,IAAI;QAAEG,SAAS,EAAE;MAAK,CAAC,GAAGH,IACrD,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXd,MAAM,CAACkB,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBzB,KAAK,CAAC0B,MAAM,GAAG,CAAC,gBACf7B,OAAA;MAAAwB,QAAA,EACGrB,KAAK,CAACkB,GAAG,CAAC,CAACF,IAAI,EAAEC,KAAK,kBACrBpB,OAAA;QAAAwB,QAAA,gBACExB,OAAA;UAAAwB,QAAA,EAASL,IAAI,CAACW;QAAW;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACxB,EAACT,IAAI,CAACY,QAAQ,EAAC,cAChB,EAACZ,IAAI,CAACa,QAAQ,EAAC,cACf,EAACb,IAAI,CAACc,QAAQ,GAAGd,IAAI,CAACc,QAAQ,GAAG,aAAa,EAAC,GACzD,EAACd,IAAI,CAACG,SAAS,GAAG,MAAM,GAAG,MAAM;MAAA,GAL1BF,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAEL5B,OAAA;MAAAwB,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAxDID,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AA0Dd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}