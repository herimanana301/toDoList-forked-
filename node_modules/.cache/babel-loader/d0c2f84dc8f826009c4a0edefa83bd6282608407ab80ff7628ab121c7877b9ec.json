{"ast":null,"code":"var _jsxFileName = \"/Users/landy/Desktop/selfProject/toDoList_project/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { Container, Typography, Card, CardContent, CardActions, Button, Grid } from '@mui/material'; // Import MUI components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null); // Track which task is selected\n\n  // Fetch tasks from the backend\n  useEffect(() => {\n    const socket = io('http://127.0.0.1:5000');\n    fetch('http://127.0.0.1:5000/api/tasks').then(response => response.json()).then(data => setTasks(data.tasks)).catch(error => console.error('Error fetching tasks:', error));\n    socket.on('connect', () => {\n      console.log('Connected to Socket.io server'); // Log when connected\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from Socket.io server'); // Log when disconnected\n    });\n    socket.on('task_update', newTask => {\n      setTasks(prevTasks => [...prevTasks, newTask]);\n    });\n    socket.on('task_deleted', ({\n      task_id\n    }) => {\n      console.log(`Task deleted with ID: ${task_id}`); // Log for debugging\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== task_id)); // Filter out the deleted task\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const completeTask = task_id => {\n    fetch(`http://127.0.0.1:5000/tasks/${task_id}/complete`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Task completed:', data.message);\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== task_id)); // Filter out the completed task\n    }).catch(error => console.error('Error completing task:', error));\n  };\n\n  // Function to delete a task\n  const deleteTask = task_id => {\n    fetch(`http://127.0.0.1:5000/api/tasks/${task_id}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(data => {\n      console.log('Task deleted:', data.message);\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== task_id));\n    }).catch(error => console.error('Error deleting task:', error));\n  };\n\n  // Handle task click (to reveal complete and delete options)\n  const handleTaskClick = task_id => {\n    setSelectedTask(task_id === selectedTask ? null : task_id); // Toggle selection\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"My To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: tasks.filter(task => !task.completed) // Only show tasks that are not completed\n      .map((task, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          onClick: () => handleTaskClick(task.id) // Select the task when clicked\n          ,\n          sx: {\n            backgroundColor: task.completed ? '#e0f7fa' : '#fff3e0',\n            cursor: 'pointer',\n            ':hover': {\n              boxShadow: '0 5px 15px rgba(0,0,0,0.3)'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: [\"Priority: \", task.priority]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: [\"Category: \", task.category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: [\"Deadline: \", task.deadline ? task.deadline : 'No deadline']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: [\"Status: \", task.completed ? \"Completed\" : \"Pending\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), selectedTask === task.id && /*#__PURE__*/_jsxDEV(CardActions, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: () => completeTask(task.id),\n              children: \"Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              onClick: () => deleteTask(task.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoList, \"Cvg8ZAXndLj8UIebRFAblQ+N89M=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","io","Container","Typography","Card","CardContent","CardActions","Button","Grid","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","selectedTask","setSelectedTask","socket","fetch","then","response","json","data","catch","error","console","on","log","newTask","prevTasks","task_id","filter","task","id","disconnect","completeTask","method","headers","ok","Error","message","deleteTask","handleTaskClick","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","completed","map","index","item","xs","sm","md","onClick","sx","backgroundColor","cursor","boxShadow","description","color","priority","category","deadline","_c","$RefreshReg$"],"sources":["/Users/landy/Desktop/selfProject/toDoList_project/src/components/ToDoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { Container, Typography, Card, CardContent, CardActions, Button, Grid } from '@mui/material';  // Import MUI components\n\nconst ToDoList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);  // Track which task is selected\n\n  // Fetch tasks from the backend\n  useEffect(() => {\n    const socket = io('http://127.0.0.1:5000');\n\n    fetch('http://127.0.0.1:5000/api/tasks')\n      .then(response => response.json())\n      .then(data => setTasks(data.tasks))\n      .catch(error => console.error('Error fetching tasks:', error));\n\n    socket.on('connect', () => {\n      console.log('Connected to Socket.io server');  // Log when connected\n    });\n    \n    socket.on('disconnect', () => {\n      console.log('Disconnected from Socket.io server');  // Log when disconnected\n    });\n\n    socket.on('task_update', (newTask) => {\n      setTasks(prevTasks => [...prevTasks, newTask]);\n    });\n\n    socket.on('task_deleted', ({ task_id }) => {\n      console.log(`Task deleted with ID: ${task_id}`);  // Log for debugging\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== task_id));  // Filter out the deleted task\n    });\n    \n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const completeTask = (task_id) => {\n    fetch(`http://127.0.0.1:5000/tasks/${task_id}/complete`, {  \n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        console.log('Task completed:', data.message);\n        setTasks((prevTasks) => prevTasks.filter((task) => task.id !== task_id));  // Filter out the completed task\n      })\n      .catch((error) => console.error('Error completing task:', error));\n  };\n  \n\n  // Function to delete a task\n  const deleteTask = (task_id) => {\n    fetch(`http://127.0.0.1:5000/api/tasks/${task_id}`, {\n      method: 'DELETE',\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log('Task deleted:', data.message);\n        setTasks(prevTasks => prevTasks.filter(task => task.id !== task_id));\n      })\n      .catch(error => console.error('Error deleting task:', error));\n  };\n\n  // Handle task click (to reveal complete and delete options)\n  const handleTaskClick = (task_id) => {\n    setSelectedTask(task_id === selectedTask ? null : task_id);  // Toggle selection\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        My To-Do List\n      </Typography>\n\n      <Grid container spacing={3}>\n        {tasks\n          .filter(task => !task.completed)  // Only show tasks that are not completed\n          .map((task, index) => (\n            <Grid item xs={12} sm={6} md={4} key={index}>\n              <Card \n                onClick={() => handleTaskClick(task.id)}  // Select the task when clicked\n                sx={{ \n                  backgroundColor: task.completed ? '#e0f7fa' : '#fff3e0',\n                  cursor: 'pointer',\n                  ':hover': { boxShadow: '0 5px 15px rgba(0,0,0,0.3)' }\n                }}\n              >\n                <CardContent>\n                  <Typography variant=\"h6\">{task.description}</Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Priority: {task.priority}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Category: {task.category}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Deadline: {task.deadline ? task.deadline : 'No deadline'}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Status: {task.completed ? \"Completed\" : \"Pending\"}\n                  </Typography>\n                </CardContent>\n                {selectedTask === task.id && (\n                  <CardActions>\n                    <Button color=\"primary\" onClick={() => completeTask(task.id)}>\n                      Complete\n                    </Button>\n                    <Button color=\"secondary\" onClick={() => deleteTask(task.id)}>\n                      Delete\n                    </Button>\n                  </CardActions>\n                )}\n              </Card>\n            </Grid>\n          ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default ToDoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,kBAAkB;AACrC,SAASC,SAAS,EAAEC,UAAU,EAAEC,IAAI,EAAEC,WAAW,EAAEC,WAAW,EAAEC,MAAM,EAAEC,IAAI,QAAQ,eAAe,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtG,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAEzD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMiB,MAAM,GAAGhB,EAAE,CAAC,uBAAuB,CAAC;IAE1CiB,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIR,QAAQ,CAACQ,IAAI,CAACT,KAAK,CAAC,CAAC,CAClCU,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;IAEhEP,MAAM,CAACS,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBD,OAAO,CAACE,GAAG,CAAC,+BAA+B,CAAC,CAAC,CAAE;IACjD,CAAC,CAAC;IAEFV,MAAM,CAACS,EAAE,CAAC,YAAY,EAAE,MAAM;MAC5BD,OAAO,CAACE,GAAG,CAAC,oCAAoC,CAAC,CAAC,CAAE;IACtD,CAAC,CAAC;IAEFV,MAAM,CAACS,EAAE,CAAC,aAAa,EAAGE,OAAO,IAAK;MACpCd,QAAQ,CAACe,SAAS,IAAI,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC;IAChD,CAAC,CAAC;IAEFX,MAAM,CAACS,EAAE,CAAC,cAAc,EAAE,CAAC;MAAEI;IAAQ,CAAC,KAAK;MACzCL,OAAO,CAACE,GAAG,CAAC,yBAAyBG,OAAO,EAAE,CAAC,CAAC,CAAE;MAClDhB,QAAQ,CAACe,SAAS,IAAIA,SAAS,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKH,OAAO,CAAC,CAAC,CAAC,CAAE;IACzE,CAAC,CAAC;IAEF,OAAO,MAAM;MACXb,MAAM,CAACiB,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIL,OAAO,IAAK;IAChCZ,KAAK,CAAC,+BAA+BY,OAAO,WAAW,EAAE;MACvDM,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACClB,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACkB,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOnB,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACdG,OAAO,CAACE,GAAG,CAAC,iBAAiB,EAAEL,IAAI,CAACkB,OAAO,CAAC;MAC5C1B,QAAQ,CAAEe,SAAS,IAAKA,SAAS,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKH,OAAO,CAAC,CAAC,CAAC,CAAE;IAC7E,CAAC,CAAC,CACDP,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC;;EAGD;EACA,MAAMiB,UAAU,GAAIX,OAAO,IAAK;IAC9BZ,KAAK,CAAC,mCAAmCY,OAAO,EAAE,EAAE;MAClDM,MAAM,EAAE;IACV,CAAC,CAAC,CACCjB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZG,OAAO,CAACE,GAAG,CAAC,eAAe,EAAEL,IAAI,CAACkB,OAAO,CAAC;MAC1C1B,QAAQ,CAACe,SAAS,IAAIA,SAAS,CAACE,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKH,OAAO,CAAC,CAAC;IACtE,CAAC,CAAC,CACDP,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC;;EAED;EACA,MAAMkB,eAAe,GAAIZ,OAAO,IAAK;IACnCd,eAAe,CAACc,OAAO,KAAKf,YAAY,GAAG,IAAI,GAAGe,OAAO,CAAC,CAAC,CAAE;EAC/D,CAAC;EAED,oBACEpB,OAAA,CAACR,SAAS;IAAAyC,QAAA,gBACRjC,OAAA,CAACP,UAAU;MAACyC,OAAO,EAAC,IAAI;MAACC,KAAK,EAAC,QAAQ;MAACC,YAAY;MAAAH,QAAA,EAAC;IAErD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbxC,OAAA,CAACF,IAAI;MAAC2C,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAT,QAAA,EACxB9B,KAAK,CACHkB,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACqB,SAAS,CAAC,CAAE;MAAA,CACjCC,GAAG,CAAC,CAACtB,IAAI,EAAEuB,KAAK,kBACf7C,OAAA,CAACF,IAAI;QAACgD,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAhB,QAAA,eAC9BjC,OAAA,CAACN,IAAI;UACHwD,OAAO,EAAEA,CAAA,KAAMlB,eAAe,CAACV,IAAI,CAACC,EAAE,CAAE,CAAE;UAAA;UAC1C4B,EAAE,EAAE;YACFC,eAAe,EAAE9B,IAAI,CAACqB,SAAS,GAAG,SAAS,GAAG,SAAS;YACvDU,MAAM,EAAE,SAAS;YACjB,QAAQ,EAAE;cAAEC,SAAS,EAAE;YAA6B;UACtD,CAAE;UAAArB,QAAA,gBAEFjC,OAAA,CAACL,WAAW;YAAAsC,QAAA,gBACVjC,OAAA,CAACP,UAAU;cAACyC,OAAO,EAAC,IAAI;cAAAD,QAAA,EAAEX,IAAI,CAACiC;YAAW;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eACxDxC,OAAA,CAACP,UAAU;cAACyC,OAAO,EAAC,OAAO;cAACsB,KAAK,EAAC,eAAe;cAAAvB,QAAA,GAAC,YACtC,EAACX,IAAI,CAACmC,QAAQ;YAAA;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACd,CAAC,eACbxC,OAAA,CAACP,UAAU;cAACyC,OAAO,EAAC,OAAO;cAACsB,KAAK,EAAC,eAAe;cAAAvB,QAAA,GAAC,YACtC,EAACX,IAAI,CAACoC,QAAQ;YAAA;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACd,CAAC,eACbxC,OAAA,CAACP,UAAU;cAACyC,OAAO,EAAC,OAAO;cAACsB,KAAK,EAAC,eAAe;cAAAvB,QAAA,GAAC,YACtC,EAACX,IAAI,CAACqC,QAAQ,GAAGrC,IAAI,CAACqC,QAAQ,GAAG,aAAa;YAAA;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC,eACbxC,OAAA,CAACP,UAAU;cAACyC,OAAO,EAAC,OAAO;cAACsB,KAAK,EAAC,eAAe;cAAAvB,QAAA,GAAC,UACxC,EAACX,IAAI,CAACqB,SAAS,GAAG,WAAW,GAAG,SAAS;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,EACbnC,YAAY,KAAKiB,IAAI,CAACC,EAAE,iBACvBvB,OAAA,CAACJ,WAAW;YAAAqC,QAAA,gBACVjC,OAAA,CAACH,MAAM;cAAC2D,KAAK,EAAC,SAAS;cAACN,OAAO,EAAEA,CAAA,KAAMzB,YAAY,CAACH,IAAI,CAACC,EAAE,CAAE;cAAAU,QAAA,EAAC;YAE9D;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTxC,OAAA,CAACH,MAAM;cAAC2D,KAAK,EAAC,WAAW;cAACN,OAAO,EAAEA,CAAA,KAAMnB,UAAU,CAACT,IAAI,CAACC,EAAE,CAAE;cAAAU,QAAA,EAAC;YAE9D;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CACd;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC,GAlC6BK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmCrC,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAACtC,EAAA,CA5HID,QAAQ;AAAA2D,EAAA,GAAR3D,QAAQ;AA8Hd,eAAeA,QAAQ;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}