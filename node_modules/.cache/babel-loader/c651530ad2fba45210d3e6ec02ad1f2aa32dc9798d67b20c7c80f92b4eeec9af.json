{"ast":null,"code":"import{useState,useEffect}from\"react\";import ToDoForm from\"./components/ToDoForm\";import ToDoList from\"./components/ToDoList\";import LoginForm from\"./components/LoginForm\";import RegisterForm from\"./components/RegistrationForm\";import'./App.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[tasks,setTasks]=useState([]);const[isAuthenticated,setIsAuthenticated]=useState(false);const[token,setToken]=useState(localStorage.getItem('token')||null);const[showLogin,setShowLogin]=useState(true);// Fetch tasks only when authenticated\nuseEffect(()=>{const fetchTasks=async()=>{if(!token)return;try{const response=await fetch(\"/api/tasks\",{headers:{\"Authorization\":`Bearer ${token}`}});if(!response.ok){if(response.status===401){setIsAuthenticated(false);localStorage.removeItem('token');return;}throw new Error(`Failed to fetch tasks: ${response.statusText}`);}const data=await response.json();setTasks(data.tasks);}catch(error){console.error(\"Error fetching tasks:\",error);}};fetchTasks();},[token]);// Handle login\nconst handleLogin=async credentials=>{try{const response=await fetch(\"/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(credentials)});if(!response.ok)throw new Error(\"Login failed\");const data=await response.json();const jwtToken=data.access_token;localStorage.setItem('token',jwtToken);setToken(jwtToken);setIsAuthenticated(true);}catch(error){console.error(\"Login error:\",error);}};// Handle registration\nconst handleRegister=async credentials=>{try{const response=await fetch(\"http://127.0.0.1:5000/register\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(credentials)});const data=await response.json();if(!response.ok){throw new Error(`Registration failed: ${data.message}`);}console.log('Registration successful:',data);}catch(error){console.error('Registration error:',error);}};// Handle logout\nconst handleLogout=()=>{localStorage.removeItem('token');setToken(null);setIsAuthenticated(false);setTasks([]);};// Add a new task\nconst addTask=async task=>{try{const response=await fetch(\"/api/tasks\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":`Bearer ${token}`},body:JSON.stringify(task)});if(!response.ok)throw new Error(\"Failed to add task\");const newTask=await response.json();setTasks(prevTasks=>[...prevTasks,newTask]);}catch(error){console.error(\"Add task error:\",error);}};// Delete a task\nconst deleteTask=async taskId=>{try{const response=await fetch(`/api/tasks/${taskId}`,{method:\"DELETE\",headers:{\"Authorization\":`Bearer ${token}`}});if(!response.ok)throw new Error(\"Failed to delete task\");setTasks(prevTasks=>prevTasks.filter(task=>task.id!==taskId));}catch(error){console.error(\"Delete task error:\",error);}};// Complete a task\nconst completeTask=async taskId=>{try{const response=await fetch(`/tasks/${taskId}/complete`,{method:\"PUT\",headers:{\"Authorization\":`Bearer ${token}`}});if(!response.ok)throw new Error(\"Failed to complete task\");setTasks(prevTasks=>prevTasks.map(task=>task.id===taskId?{...task,completed:true}:task));}catch(error){console.error(\"Complete task error:\",error);}};// Edit a task\nconst editTask=async(taskId,editedTask)=>{try{const response=await fetch(`/api/tasks/${taskId}`,{method:\"PUT\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":`Bearer ${token}`},body:JSON.stringify(editedTask)});if(!response.ok)throw new Error(\"Failed to update task\");const updatedTaskFromServer=await response.json();setTasks(prevTasks=>prevTasks.map(task=>task.id===taskId?updatedTaskFromServer.task:task));}catch(error){console.error(\"Edit task error:\",error);}};// Fetch test data\nuseEffect(()=>{const fetchTestData=async()=>{try{const response=await fetch(\"http://127.0.0.1:5000/test\",{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}});if(!response.ok)throw new Error(`Failed to fetch test data: ${response.statusText}`);const result=await response.json();console.log(\"Test fetch result:\",result);}catch(error){console.error(\"Test fetch error:\",error);}};fetchTestData();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"ToDo List\"}),!isAuthenticated?/*#__PURE__*/_jsx(_Fragment,{children:showLogin?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(LoginForm,{onLogin:handleLogin}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Don't have an account?\",\" \",/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowLogin(false),children:\"Register\"})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(RegisterForm,{onRegister:handleRegister}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Already have an account?\",\" \",/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowLogin(true),children:\"Login\"})]})]})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,children:\"Logout\"}),/*#__PURE__*/_jsx(ToDoForm,{addTask:addTask}),/*#__PURE__*/_jsx(ToDoList,{tasks:tasks,deleteTask:deleteTask,completeTask:completeTask,editTask:editTask})]})]});}export default App;","map":{"version":3,"names":["useState","useEffect","ToDoForm","ToDoList","LoginForm","RegisterForm","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","tasks","setTasks","isAuthenticated","setIsAuthenticated","token","setToken","localStorage","getItem","showLogin","setShowLogin","fetchTasks","response","fetch","headers","ok","status","removeItem","Error","statusText","data","json","error","console","handleLogin","credentials","method","body","JSON","stringify","jwtToken","access_token","setItem","handleRegister","message","log","handleLogout","addTask","task","newTask","prevTasks","deleteTask","taskId","filter","id","completeTask","map","completed","editTask","editedTask","updatedTaskFromServer","fetchTestData","result","className","children","onLogin","onClick","onRegister"],"sources":["/Users/landy/Desktop/selfProject/toDoList_project/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport ToDoForm from \"./components/ToDoForm\";\nimport ToDoList from \"./components/ToDoList\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegisterForm from \"./components/RegistrationForm\";\nimport './App.css'; \n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [showLogin, setShowLogin] = useState(true);\n  \n\n  // Fetch tasks only when authenticated\n  useEffect(() => {\n    const fetchTasks = async () => {\n      if (!token) return;\n      \n      try {\n        const response = await fetch(\"/api/tasks\", {\n          headers: {\n            \"Authorization\": `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          if (response.status === 401) {\n            setIsAuthenticated(false);\n            localStorage.removeItem('token');\n            return;\n          }\n          throw new Error(`Failed to fetch tasks: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n        setTasks(data.tasks);\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n\n    fetchTasks();\n  }, [token]);\n\n  \n\n  \n  // Handle login\n  const handleLogin = async (credentials) => {\n    try {\n      const response = await fetch(\"/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(credentials),\n      });\n\n      if (!response.ok) throw new Error(\"Login failed\");\n\n      const data = await response.json();\n      const jwtToken = data.access_token;\n\n      localStorage.setItem('token', jwtToken);\n      setToken(jwtToken);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error(\"Login error:\", error);\n    }\n  };\n\n  // Handle registration\n  const handleRegister = async (credentials) => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(credentials),\n      });\n\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(`Registration failed: ${data.message}`);\n      }\n\n      console.log('Registration successful:', data);\n    } catch (error) {\n      console.error('Registration error:', error);\n    }\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setIsAuthenticated(false);\n    setTasks([]);\n  };\n\n  // Add a new task\n  const addTask = async (task) => {\n    try {\n      const response = await fetch(\"/api/tasks\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`,\n        },\n        body: JSON.stringify(task),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to add task\");\n\n      const newTask = await response.json();\n      setTasks((prevTasks) => [...prevTasks, newTask]);\n    } catch (error) {\n      console.error(\"Add task error:\", error);\n    }\n  };\n\n  // Delete a task\n  const deleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`/api/tasks/${taskId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Authorization\": `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) throw new Error(\"Failed to delete task\");\n\n      setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\n    } catch (error) {\n      console.error(\"Delete task error:\", error);\n    }\n  };\n\n  // Complete a task\n  const completeTask = async (taskId) => {\n    try {\n      const response = await fetch(`/tasks/${taskId}/complete`, {\n        method: \"PUT\",\n        headers: {\n          \"Authorization\": `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) throw new Error(\"Failed to complete task\");\n\n      setTasks((prevTasks) =>\n        prevTasks.map((task) =>\n          task.id === taskId ? { ...task, completed: true } : task\n        )\n      );\n    } catch (error) {\n      console.error(\"Complete task error:\", error);\n    }\n  };\n\n  // Edit a task\n  const editTask = async (taskId, editedTask) => {\n    try {\n      const response = await fetch(`/api/tasks/${taskId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`,\n        },\n        body: JSON.stringify(editedTask),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to update task\");\n\n      const updatedTaskFromServer = await response.json();\n      setTasks((prevTasks) =>\n        prevTasks.map((task) =>\n          task.id === taskId ? updatedTaskFromServer.task : task\n        )\n      );\n    } catch (error) {\n      console.error(\"Edit task error:\", error);\n    }\n  };\n\n  // Fetch test data\n  useEffect(() => {\n    const fetchTestData = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/test\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (!response.ok) throw new Error(`Failed to fetch test data: ${response.statusText}`);\n\n        const result = await response.json();\n        console.log(\"Test fetch result:\", result);\n      } catch (error) {\n        console.error(\"Test fetch error:\", error);\n      }\n    };\n\n    fetchTestData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>ToDo List</h1>\n      {!isAuthenticated ? (\n        <>\n          {showLogin ? (\n            <>\n              <LoginForm onLogin={handleLogin} />\n              <p>\n                Don't have an account?{\" \"}\n                <button onClick={() => setShowLogin(false)}>Register</button>\n              </p>\n            </>\n          ) : (\n            <>\n              <RegisterForm onRegister={handleRegister} />\n              <p>\n                Already have an account?{\" \"}\n                <button onClick={() => setShowLogin(true)}>Login</button>\n              </p>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <button onClick={handleLogout}>Logout</button>\n          <ToDoForm addTask={addTask} />\n          <ToDoList\n            tasks={tasks}\n            deleteTask={deleteTask}\n            completeTask={completeTask}\n            editTask={editTask}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}