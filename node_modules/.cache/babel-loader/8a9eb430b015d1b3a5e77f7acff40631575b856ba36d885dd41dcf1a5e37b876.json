{"ast":null,"code":"var _jsxFileName = \"/Users/landy/Desktop/selfProject/toDoList_project/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport ToDoForm from \"./components/ToDoForm\";\nimport ToDoList from \"./components/ToDoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    // Fetch tasks from the Flask API on load\n    fetch(\"/tasks\").then(res => res.json()).then(data => {\n      setTasks(data);\n    });\n  }, []);\n  const addTask = async task => {\n    const response = await fetch(\"/api/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    });\n    const newTask = await response.json();\n    setTasks(prevTasks => [...prevTasks, newTask]);\n  };\n  const deleteTask = async taskId => {\n    await fetch(`/tasks/${taskId}`, {\n      method: \"DELETE\"\n    });\n    setTasks(prevTasks => prevTasks.filter((_, index) => index + 1 !== taskId));\n  };\n  const completeTask = async taskId => {\n    await fetch(`/tasks/${taskId}/complete`, {\n      method: \"PUT\"\n    });\n    setTasks(prevTasks => prevTasks.map((task, index) => index + 1 === taskId ? {\n      ...task,\n      completed: true\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      tasks: tasks,\n      deleteTask: deleteTask,\n      completeTask: completeTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ToDoForm","ToDoList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","fetch","then","res","json","data","addTask","task","response","method","headers","body","JSON","stringify","newTask","prevTasks","deleteTask","taskId","filter","_","index","completeTask","map","completed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/landy/Desktop/selfProject/toDoList_project/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport ToDoForm from \"./components/ToDoForm\";\nimport ToDoList from \"./components/ToDoList\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    // Fetch tasks from the Flask API on load\n    fetch(\"/tasks\")\n      .then((res) => res.json())\n      .then((data) => {\n        setTasks(data);\n      });\n  }, []);\n\n  const addTask = async (task) => {\n    const response = await fetch(\"/api/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n    const newTask = await response.json();\n    setTasks((prevTasks) => [...prevTasks, newTask]);\n  };\n\n  const deleteTask = async (taskId) => {\n    await fetch(`/tasks/${taskId}`, {\n      method: \"DELETE\",\n    });\n    setTasks((prevTasks) => prevTasks.filter((_, index) => index + 1 !== taskId));\n  };\n\n  const completeTask = async (taskId) => {\n    await fetch(`/tasks/${taskId}/complete`, {\n      method: \"PUT\",\n    });\n    setTasks((prevTasks) =>\n      prevTasks.map((task, index) =>\n        index + 1 === taskId ? { ...task, completed: true } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>ToDo List</h1>\n      <ToDoForm addTask={addTask} />\n      <ToDoList tasks={tasks} deleteTask={deleteTask} completeTask={completeTask} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACAS,KAAK,CAAC,QAAQ,CAAC,CACZC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdL,QAAQ,CAACK,IAAI,CAAC;IAChB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAG,MAAOC,IAAI,IAAK;IAC9B,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAAC,YAAY,EAAE;MACzCQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;IAC3B,CAAC,CAAC;IACF,MAAMO,OAAO,GAAG,MAAMN,QAAQ,CAACJ,IAAI,CAAC,CAAC;IACrCJ,QAAQ,CAAEe,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC;EAClD,CAAC;EAED,MAAME,UAAU,GAAG,MAAOC,MAAM,IAAK;IACnC,MAAMhB,KAAK,CAAC,UAAUgB,MAAM,EAAE,EAAE;MAC9BR,MAAM,EAAE;IACV,CAAC,CAAC;IACFT,QAAQ,CAAEe,SAAS,IAAKA,SAAS,CAACG,MAAM,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAKA,KAAK,GAAG,CAAC,KAAKH,MAAM,CAAC,CAAC;EAC/E,CAAC;EAED,MAAMI,YAAY,GAAG,MAAOJ,MAAM,IAAK;IACrC,MAAMhB,KAAK,CAAC,UAAUgB,MAAM,WAAW,EAAE;MACvCR,MAAM,EAAE;IACV,CAAC,CAAC;IACFT,QAAQ,CAAEe,SAAS,IACjBA,SAAS,CAACO,GAAG,CAAC,CAACf,IAAI,EAAEa,KAAK,KACxBA,KAAK,GAAG,CAAC,KAAKH,MAAM,GAAG;MAAE,GAAGV,IAAI;MAAEgB,SAAS,EAAE;IAAK,CAAC,GAAGhB,IACxD,CACF,CAAC;EACH,CAAC;EAED,oBACEX,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7B,OAAA;MAAA6B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBjC,OAAA,CAACH,QAAQ;MAACa,OAAO,EAAEA;IAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BjC,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA,KAAM;MAACiB,UAAU,EAAEA,UAAW;MAACK,YAAY,EAAEA;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEV;AAAC/B,EAAA,CAjDQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}