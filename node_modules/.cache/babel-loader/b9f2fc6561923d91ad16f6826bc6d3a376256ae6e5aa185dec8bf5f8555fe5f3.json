{"ast":null,"code":"var _jsxFileName = \"/Users/landy/Desktop/selfProject/toDoList_project/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { Container, Typography, Card, CardContent, CardActions, Button, Grid, MenuItem, Select, FormControl, InputLabel, TextField } from '@mui/material';\nimport { format, isBefore, isToday, differenceInDays } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]); // Tasks state\n  const [selectedTask, setSelectedTask] = useState(null); // Selected task state for actions\n  const [isEditing, setIsEditing] = useState(null); // State to track which task is being edited\n  const [editedTask, setEditedTask] = useState(null); // Track the changes for the task being edited\n  const [sortBy, setSortBy] = useState('deadline'); // Sorting state (default is deadline)\n  const [filterDate, setFilterDate] = useState(null); // Date filter state\n  const [showCompleted, setShowCompleted] = useState('incomplete'); // Filter for viewing incomplete, completed, or all tasks\n\n  const priorityLevels = {\n    'High': 1,\n    'Medium': 2,\n    'Low': 3\n  };\n  useEffect(() => {\n    const socket = io('http://127.0.0.1:5000');\n    fetch('http://127.0.0.1:5000/api/tasks').then(response => response.json()).then(data => setTasks(data.tasks)).catch(error => console.error('Error fetching tasks:', error));\n\n    // Handle task updates via socket\n    socket.on('task_update', updatedTask => {\n      setTasks(prevTasks => {\n        const taskExists = prevTasks.find(task => task.id === updatedTask.id);\n        if (taskExists) {\n          return prevTasks.map(task => task.id === updatedTask.id ? updatedTask : task);\n        }\n        return [...prevTasks, updatedTask];\n      });\n    });\n\n    // Handle task deletion via socket\n    socket.on('task_deleted', ({\n      task_id\n    }) => {\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== task_id));\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const completeTask = task_id => {\n    fetch(`http://127.0.0.1:5000/tasks/${task_id}/complete`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) throw new Error('Network response was not ok');\n      return response.json();\n    }).then(data => {\n      setTasks(prevTasks => prevTasks.map(task => task.id === task_id ? {\n        ...task,\n        completed: true\n      } : task));\n    }).catch(error => console.error('Error completing task:', error));\n  };\n  const deleteTask = task_id => {\n    fetch(`http://127.0.0.1:5000/api/tasks/${task_id}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(data => {\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== task_id));\n    }).catch(error => console.error('Error deleting task:', error));\n  };\n  const handleTaskClick = task_id => {\n    setSelectedTask(task_id === selectedTask ? null : task_id);\n  };\n  const handleSortChange = event => {\n    setSortBy(event.target.value);\n  };\n  const handleShowCompletedChange = event => {\n    setShowCompleted(event.target.value);\n  };\n  const handleEditClick = task => {\n    setIsEditing(task.id);\n    setEditedTask({\n      ...task\n    }); // Preload the editing form with the existing task details\n  };\n  const handleEditChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setEditedTask(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const saveEditedTask = task_id => {\n    fetch(`http://127.0.0.1:5000/api/tasks/${task_id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(editedTask)\n    }).then(response => response.json()).then(updatedTask => {\n      setTasks(prevTasks => prevTasks.map(task => task.id === task_id ? updatedTask.task : task)); // Ensure correct update of task\n      setIsEditing(null);\n    }).catch(error => console.error('Error editing task:', error));\n  };\n  const sortedTasks = tasks.slice().sort((a, b) => {\n    if (sortBy === 'priority') {\n      return priorityLevels[a.priority] - priorityLevels[b.priority];\n    } else if (sortBy === 'deadline') {\n      const dateA = a.deadline ? new Date(a.deadline) : new Date(9999, 11, 31);\n      const dateB = b.deadline ? new Date(b.deadline) : new Date(9999, 11, 31);\n      return dateA - dateB;\n    } else {\n      return 0;\n    }\n  });\n  const filteredTasks = sortedTasks.filter(task => {\n    const matchesDateFilter = filterDate ? task.deadline && isBefore(new Date(task.deadline), filterDate) : true;\n    const matchesCompletedFilter = showCompleted === 'incomplete' && !task.completed || showCompleted === 'completed' && task.completed || showCompleted === 'all';\n    return matchesDateFilter && matchesCompletedFilter;\n  });\n  const getCardBackgroundColor = task => {\n    if (task.completed) {\n      return '#4caf50'; // Green for completed tasks\n    } else if (sortBy === 'priority') {\n      switch (task.priority) {\n        case 'High':\n          return '#f44336';\n        // Red for high priority\n        case 'Medium':\n          return '#ff9800';\n        // Orange for medium priority\n        case 'Low':\n          return '#ffeb3b';\n        // Yellow for low priority\n        default:\n          return '#ffffff';\n        // Default white background\n      }\n    } else if (sortBy === 'deadline') {\n      return getDeadlineStatus(task.deadline);\n    } else {\n      return '#ffffff';\n    }\n  };\n  const getDeadlineStatus = deadline => {\n    if (!deadline) return '#fff3e0';\n    const deadlineDate = new Date(deadline);\n    if (isToday(deadlineDate)) return '#ffeb3b';\n    if (differenceInDays(deadlineDate, new Date()) < 3) return '#ff9800';\n    if (isBefore(deadlineDate, new Date())) return '#f44336';\n    return '#e0f7fa';\n  };\n  const handleDateChange = event => {\n    const dateValue = event.target.value;\n    if (dateValue) {\n      setFilterDate(new Date(dateValue));\n    } else {\n      setFilterDate(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"My To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"sort-by-label\",\n        children: \"Sort By\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"sort-by-label\",\n        id: \"sort-by\",\n        value: sortBy,\n        label: \"Sort By\",\n        onChange: handleSortChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"priority\",\n          children: \"Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"deadline\",\n          children: \"Deadline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"show-completed-label\",\n        children: \"Show Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"show-completed-label\",\n        id: \"show-completed\",\n        value: showCompleted,\n        label: \"Show Tasks\",\n        onChange: handleShowCompletedChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"incomplete\",\n          children: \"Incomplete Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"completed\",\n          children: \"Completed Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"all\",\n          children: \"All Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Filter by deadline\",\n      type: \"date\",\n      value: filterDate ? format(filterDate, 'yyyy-MM-dd') : '',\n      onChange: handleDateChange,\n      InputLabelProps: {\n        shrink: true\n      },\n      fullWidth: true,\n      style: {\n        marginBottom: '20px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: filteredTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: [\" \", /*#__PURE__*/_jsxDEV(Card, {\n          onClick: () => handleTaskClick(task.id),\n          sx: {\n            backgroundColor: getCardBackgroundColor(task),\n            cursor: 'pointer',\n            ':hover': {\n              boxShadow: '0 5px 15px rgba(0,0,0,0.3)'\n            }\n          },\n          children: [isEditing === task.id ? /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Description\",\n              value: editedTask.description,\n              name: \"description\",\n              onChange: handleEditChange,\n              fullWidth: true,\n              style: {\n                marginBottom: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              style: {\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"edit-priority-label\",\n                children: \"Priority\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"edit-priority-label\",\n                value: editedTask.priority,\n                name: \"priority\",\n                onChange: handleEditChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"High\",\n                  children: \"High\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Medium\",\n                  children: \"Medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Low\",\n                  children: \"Low\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Deadline\",\n              type: \"date\",\n              value: editedTask.deadline ? format(new Date(editedTask.deadline), 'yyyy-MM-dd') : '',\n              name: \"deadline\",\n              onChange: handleEditChange,\n              InputLabelProps: {\n                shrink: true\n              },\n              fullWidth: true,\n              style: {\n                marginBottom: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Category\",\n              value: editedTask.category,\n              name: \"category\",\n              onChange: handleEditChange,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: [\"Priority: \", task.priority]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: [\"Category: \", task.category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: [\"Deadline: \", task.deadline ? format(new Date(task.deadline), 'MM/dd/yyyy') : 'No deadline']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: [\"Status: \", task.completed ? \"Completed\" : \"Pending\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this), selectedTask === task.id && /*#__PURE__*/_jsxDEV(CardActions, {\n            children: [!task.completed && isEditing !== task.id && /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: () => completeTask(task.id),\n              children: \"Complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 21\n            }, this), isEditing === task.id ? /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: () => saveEditedTask(task.id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: () => handleEditClick(task),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              onClick: () => deleteTask(task.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoList, \"maH6lzkSbGOrZ6CEqkLKuCyatog=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","io","Container","Typography","Card","CardContent","CardActions","Button","Grid","MenuItem","Select","FormControl","InputLabel","TextField","format","isBefore","isToday","differenceInDays","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","selectedTask","setSelectedTask","isEditing","setIsEditing","editedTask","setEditedTask","sortBy","setSortBy","filterDate","setFilterDate","showCompleted","setShowCompleted","priorityLevels","socket","fetch","then","response","json","data","catch","error","console","on","updatedTask","prevTasks","taskExists","find","task","id","map","task_id","filter","disconnect","completeTask","method","headers","ok","Error","completed","deleteTask","handleTaskClick","handleSortChange","event","target","value","handleShowCompletedChange","handleEditClick","handleEditChange","name","prev","saveEditedTask","body","JSON","stringify","sortedTasks","slice","sort","a","b","priority","dateA","deadline","Date","dateB","filteredTasks","matchesDateFilter","matchesCompletedFilter","getCardBackgroundColor","getDeadlineStatus","deadlineDate","handleDateChange","dateValue","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","style","marginBottom","labelId","label","onChange","type","InputLabelProps","shrink","container","spacing","index","item","xs","sm","md","onClick","sx","backgroundColor","cursor","boxShadow","description","category","color","_c","$RefreshReg$"],"sources":["/Users/landy/Desktop/selfProject/toDoList_project/src/components/ToDoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { Container, Typography, Card, CardContent, CardActions, Button, Grid, MenuItem, Select, FormControl, InputLabel, TextField } from '@mui/material';\nimport { format, isBefore, isToday, differenceInDays } from 'date-fns';\n\nconst ToDoList = () => {\n  const [tasks, setTasks] = useState([]); // Tasks state\n  const [selectedTask, setSelectedTask] = useState(null); // Selected task state for actions\n  const [isEditing, setIsEditing] = useState(null); // State to track which task is being edited\n  const [editedTask, setEditedTask] = useState(null); // Track the changes for the task being edited\n  const [sortBy, setSortBy] = useState('deadline'); // Sorting state (default is deadline)\n  const [filterDate, setFilterDate] = useState(null); // Date filter state\n  const [showCompleted, setShowCompleted] = useState('incomplete'); // Filter for viewing incomplete, completed, or all tasks\n\n  const priorityLevels = { 'High': 1, 'Medium': 2, 'Low': 3 };\n\n  useEffect(() => {\n    const socket = io('http://127.0.0.1:5000');\n\n    fetch('http://127.0.0.1:5000/api/tasks')\n      .then(response => response.json())\n      .then(data => setTasks(data.tasks))\n      .catch(error => console.error('Error fetching tasks:', error));\n\n    // Handle task updates via socket\n    socket.on('task_update', (updatedTask) => {\n      setTasks(prevTasks => {\n        \n        const taskExists = prevTasks.find(task => task.id === updatedTask.id);\n        if (taskExists) {\n          return prevTasks.map(task => task.id === updatedTask.id ? updatedTask : task);\n        }\n        return [...prevTasks, updatedTask];\n      });\n    });\n\n    // Handle task deletion via socket\n    socket.on('task_deleted', ({ task_id }) => {\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== task_id));\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const completeTask = (task_id) => {\n    fetch(`http://127.0.0.1:5000/tasks/${task_id}/complete`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then(response => {\n        if (!response.ok) throw new Error('Network response was not ok');\n        return response.json();\n      })\n      .then(data => {\n        setTasks(prevTasks => \n          prevTasks.map(task => \n            task.id === task_id ? { ...task, completed: true } : task\n          )\n        );\n      })\n      .catch(error => console.error('Error completing task:', error));\n  };\n\n  const deleteTask = (task_id) => {\n    fetch(`http://127.0.0.1:5000/api/tasks/${task_id}`, { method: 'DELETE' })\n      .then(response => response.json())\n      .then(data => {\n        setTasks(prevTasks => prevTasks.filter(task => task.id !== task_id));\n      })\n      .catch(error => console.error('Error deleting task:', error));\n  };\n\n  const handleTaskClick = (task_id) => {\n    setSelectedTask(task_id === selectedTask ? null : task_id);\n  };\n\n  const handleSortChange = (event) => {\n    setSortBy(event.target.value);\n  };\n\n  const handleShowCompletedChange = (event) => {\n    setShowCompleted(event.target.value);\n  };\n\n  const handleEditClick = (task) => {\n    setIsEditing(task.id);\n    setEditedTask({ ...task }); // Preload the editing form with the existing task details\n  };\n\n  const handleEditChange = (event) => {\n    const { name, value } = event.target;\n    setEditedTask(prev => ({ ...prev, [name]: value }));\n  };\n\n  const saveEditedTask = (task_id) => {\n    fetch(`http://127.0.0.1:5000/api/tasks/${task_id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(editedTask)\n    })\n      .then(response => response.json())\n      .then(updatedTask => {\n        setTasks(prevTasks => prevTasks.map(task => task.id === task_id ? updatedTask.task : task)); // Ensure correct update of task\n        setIsEditing(null);\n      })\n      .catch(error => console.error('Error editing task:', error));\n  };\n\n  const sortedTasks = tasks.slice().sort((a, b) => {\n    if (sortBy === 'priority') {\n      return priorityLevels[a.priority] - priorityLevels[b.priority];\n    } else if (sortBy === 'deadline') {\n      const dateA = a.deadline ? new Date(a.deadline) : new Date(9999, 11, 31);\n      const dateB = b.deadline ? new Date(b.deadline) : new Date(9999, 11, 31);\n      return dateA - dateB;\n    } else {\n      return 0;\n    }\n  });\n\n  const filteredTasks = sortedTasks.filter(task => {\n    const matchesDateFilter = filterDate\n      ? task.deadline && isBefore(new Date(task.deadline), filterDate)\n      : true;\n\n    const matchesCompletedFilter = \n      (showCompleted === 'incomplete' && !task.completed) ||\n      (showCompleted === 'completed' && task.completed) ||\n      showCompleted === 'all';\n\n    return matchesDateFilter && matchesCompletedFilter;\n  });\n\n  const getCardBackgroundColor = (task) => {\n    if (task.completed) {\n      return '#4caf50'; // Green for completed tasks\n    } else if (sortBy === 'priority') {\n      switch (task.priority) {\n        case 'High':\n          return '#f44336'; // Red for high priority\n        case 'Medium':\n          return '#ff9800'; // Orange for medium priority\n        case 'Low':\n          return '#ffeb3b'; // Yellow for low priority\n        default:\n          return '#ffffff'; // Default white background\n      }\n    } else if (sortBy === 'deadline') {\n      return getDeadlineStatus(task.deadline);\n    } else {\n      return '#ffffff';\n    }\n  };\n\n  const getDeadlineStatus = (deadline) => {\n    if (!deadline) return '#fff3e0';\n    const deadlineDate = new Date(deadline);\n    if (isToday(deadlineDate)) return '#ffeb3b';\n    if (differenceInDays(deadlineDate, new Date()) < 3) return '#ff9800';\n    if (isBefore(deadlineDate, new Date())) return '#f44336';\n    return '#e0f7fa';\n  };\n\n  const handleDateChange = (event) => {\n    const dateValue = event.target.value;\n    if (dateValue) {\n      setFilterDate(new Date(dateValue));\n    } else {\n      setFilterDate(null);\n    }\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        My To-Do List\n      </Typography>\n\n      {/* Sorting Dropdown */}\n      <FormControl fullWidth style={{ marginBottom: '20px' }}>\n        <InputLabel id=\"sort-by-label\">Sort By</InputLabel>\n        <Select\n          labelId=\"sort-by-label\"\n          id=\"sort-by\"\n          value={sortBy}\n          label=\"Sort By\"\n          onChange={handleSortChange} \n        >\n          <MenuItem value=\"priority\">Priority</MenuItem>\n          <MenuItem value=\"deadline\">Deadline</MenuItem>\n        </Select>\n      </FormControl>\n\n      {/* View Completed/Incomplete Toggle */}\n      <FormControl fullWidth style={{ marginBottom: '20px' }}>\n        <InputLabel id=\"show-completed-label\">Show Tasks</InputLabel>\n        <Select\n          labelId=\"show-completed-label\"\n          id=\"show-completed\"\n          value={showCompleted}\n          label=\"Show Tasks\"\n          onChange={handleShowCompletedChange}\n        >\n          <MenuItem value=\"incomplete\">Incomplete Tasks</MenuItem>\n          <MenuItem value=\"completed\">Completed Tasks</MenuItem>\n          <MenuItem value=\"all\">All Tasks</MenuItem>\n        </Select>\n      </FormControl>\n\n      {/* Date filter input */}\n      <TextField\n        label=\"Filter by deadline\"\n        type=\"date\"\n        value={filterDate ? format(filterDate, 'yyyy-MM-dd') : ''}\n        onChange={handleDateChange}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        fullWidth\n        style={{ marginBottom: '20px' }}\n      />\n\n      {/* Render sorted and filtered tasks */}\n      <Grid container spacing={3}>\n        {filteredTasks.map((task, index) => (\n          <Grid item xs={12} sm={6} md={4} key={task.id}> {/* Ensure unique key */}\n            <Card \n              onClick={() => handleTaskClick(task.id)}\n              sx={{\n                backgroundColor: getCardBackgroundColor(task),\n                cursor: 'pointer',\n                ':hover': { boxShadow: '0 5px 15px rgba(0,0,0,0.3)' }\n              }}\n            >\n              {isEditing === task.id ? (\n                <CardContent>\n                  <TextField\n                    label=\"Description\"\n                    value={editedTask.description}\n                    name=\"description\"\n                    onChange={handleEditChange}\n                    fullWidth\n                    style={{ marginBottom: '10px' }}\n                  />\n                  <FormControl fullWidth style={{ marginBottom: '10px' }}>\n                    <InputLabel id=\"edit-priority-label\">Priority</InputLabel>\n                    <Select\n                      labelId=\"edit-priority-label\"\n                      value={editedTask.priority}\n                      name=\"priority\"\n                      onChange={handleEditChange}\n                    >\n                      <MenuItem value=\"High\">High</MenuItem>\n                      <MenuItem value=\"Medium\">Medium</MenuItem>\n                      <MenuItem value=\"Low\">Low</MenuItem>\n                    </Select>\n                  </FormControl>\n                  <TextField\n                    label=\"Deadline\"\n                    type=\"date\"\n                    value={editedTask.deadline ? format(new Date(editedTask.deadline), 'yyyy-MM-dd') : ''}\n                    name=\"deadline\"\n                    onChange={handleEditChange}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    fullWidth\n                    style={{ marginBottom: '10px' }}\n                  />\n                  <TextField\n                    label=\"Category\"\n                    value={editedTask.category}\n                    name=\"category\"\n                    onChange={handleEditChange}\n                    fullWidth\n                  />\n                </CardContent>\n              ) : (\n                <CardContent>\n                  <Typography variant=\"h6\">{task.description}</Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Priority: {task.priority}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Category: {task.category}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Deadline: {task.deadline ? format(new Date(task.deadline), 'MM/dd/yyyy') : 'No deadline'}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Status: {task.completed ? \"Completed\" : \"Pending\"}\n                  </Typography>\n                </CardContent>\n              )}\n              {selectedTask === task.id && (\n                <CardActions>\n                  {!task.completed && isEditing !== task.id && (\n                    <Button color=\"primary\" onClick={() => completeTask(task.id)}>\n                      Complete\n                    </Button>\n                  )}\n                  {isEditing === task.id ? (\n                    <Button color=\"primary\" onClick={() => saveEditedTask(task.id)}>\n                      Save\n                    </Button>\n                  ) : (\n                    <Button color=\"primary\" onClick={() => handleEditClick(task)}>\n                      Edit\n                    </Button>\n                  )}\n                  <Button color=\"secondary\" onClick={() => deleteTask(task.id)}>\n                    Delete\n                  </Button>\n                </CardActions>\n              )}\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}