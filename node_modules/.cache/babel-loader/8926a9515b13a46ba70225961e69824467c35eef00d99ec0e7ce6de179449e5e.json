{"ast":null,"code":"var _jsxFileName = \"/Users/landy/Desktop/selfProject/toDoList_project/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { Container, Typography, Card, CardContent, CardActions, Button, Grid } from '@mui/material'; // Import MUI components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null); // Track which task is selected\n\n  // Fetch tasks from the backend\n  useEffect(() => {\n    const socket = io('http://127.0.0.1:5000');\n    fetch('http://127.0.0.1:5000/api/tasks').then(response => response.json()).then(data => setTasks(data.tasks)).catch(error => console.error('Error fetching tasks:', error));\n    socket.on('task_update', newTask => {\n      setTasks(prevTasks => [...prevTasks, newTask]);\n    });\n    socket.on('task_deleted', ({\n      task_id\n    }) => {\n      console.log(`GIRL deleted with ID: ${task_id}`); // Log for debugging\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== task_id)); // Filter out the deleted task\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  // Function to delete a task\n  const deleteTask = task_id => {\n    fetch(`http://127.0.0.1:5000/api/tasks/${task_id}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(data => {\n      console.log('Task deleted:', data.message);\n      setSelectedTask(null); // Deselect the task after deletion\n    }).catch(error => console.error('Error deleting task:', error));\n  };\n\n  // Handle task click (to reveal delete option)\n  const handleTaskClick = task_id => {\n    setSelectedTask(task_id === selectedTask ? null : task_id); // Toggle selection\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      align: \"center\",\n      gutterBottom: true,\n      children: \"My To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          onClick: () => handleTaskClick(task.id) // Select the task when clicked\n          ,\n          sx: {\n            backgroundColor: task.completed ? '#e0f7fa' : '#fff3e0',\n            cursor: 'pointer',\n            ':hover': {\n              boxShadow: '0 5px 15px rgba(0,0,0,0.3)'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: [\"Priority: \", task.priority]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: [\"Category: \", task.category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: [\"Deadline: \", task.deadline ? task.deadline : 'No deadline']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: [\"Status: \", task.completed ? \"Completed\" : \"Pending\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), selectedTask === task.id && /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              onClick: () => deleteTask(task.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoList, \"Cvg8ZAXndLj8UIebRFAblQ+N89M=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","io","Container","Typography","Card","CardContent","CardActions","Button","Grid","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","selectedTask","setSelectedTask","socket","fetch","then","response","json","data","catch","error","console","on","newTask","prevTasks","task_id","log","filter","task","id","disconnect","deleteTask","method","message","handleTaskClick","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","map","index","item","xs","sm","md","onClick","sx","backgroundColor","completed","cursor","boxShadow","description","color","priority","category","deadline","_c","$RefreshReg$"],"sources":["/Users/landy/Desktop/selfProject/toDoList_project/src/components/ToDoList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { Container, Typography, Card, CardContent, CardActions, Button, Grid } from '@mui/material';  // Import MUI components\n\nconst ToDoList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);  // Track which task is selected\n\n  // Fetch tasks from the backend\n  useEffect(() => {\n    const socket = io('http://127.0.0.1:5000');\n\n    fetch('http://127.0.0.1:5000/api/tasks')\n      .then(response => response.json())\n      .then(data => setTasks(data.tasks))\n      .catch(error => console.error('Error fetching tasks:', error));\n\n    socket.on('task_update', (newTask) => {\n      setTasks(prevTasks => [...prevTasks, newTask]);\n    });\n\n    socket.on('task_deleted', ({ task_id }) => {\n      console.log(`GIRL deleted with ID: ${task_id}`);  // Log for debugging\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== task_id));  // Filter out the deleted task\n    });\n    \n    \n   \n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  // Function to delete a task\n  const deleteTask = (task_id) => {\n    fetch(`http://127.0.0.1:5000/api/tasks/${task_id}`, {\n      method: 'DELETE',\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log('Task deleted:', data.message);\n        setSelectedTask(null);  // Deselect the task after deletion\n      })\n      .catch(error => console.error('Error deleting task:', error));\n  };\n\n  // Handle task click (to reveal delete option)\n  const handleTaskClick = (task_id) => {\n    setSelectedTask(task_id === selectedTask ? null : task_id);  // Toggle selection\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\n        My To-Do List\n      </Typography>\n\n      <Grid container spacing={3}>\n        {tasks.map((task, index) => (\n          <Grid item xs={12} sm={6} md={4} key={index}>\n            <Card \n              onClick={() => handleTaskClick(task.id)}  // Select the task when clicked\n              sx={{ \n                backgroundColor: task.completed ? '#e0f7fa' : '#fff3e0',\n                cursor: 'pointer',\n                ':hover': { boxShadow: '0 5px 15px rgba(0,0,0,0.3)' }\n              }}\n            >\n              <CardContent>\n                <Typography variant=\"h6\">{task.description}</Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Priority: {task.priority}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Category: {task.category}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Deadline: {task.deadline ? task.deadline : 'No deadline'}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Status: {task.completed ? \"Completed\" : \"Pending\"}\n                </Typography>\n              </CardContent>\n              {selectedTask === task.id && (\n                <CardActions>\n                  <Button color=\"secondary\" onClick={() => deleteTask(task.id)}>\n                    Delete\n                  </Button>\n                </CardActions>\n              )}\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}