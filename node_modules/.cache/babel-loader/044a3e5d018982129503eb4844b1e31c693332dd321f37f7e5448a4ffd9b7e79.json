{"ast":null,"code":"var _jsxFileName = \"/Users/landy/Desktop/selfProject/toDoList_project/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport ToDoForm from \"./components/ToDoForm\";\nimport ToDoList from \"./components/ToDoList\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegisterForm from \"./components/RegistrationForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [showLogin, setShowLogin] = useState(true); // State to toggle between login and register forms\n\n  useEffect(() => {\n    // Fetch tasks from the Flask API only if authenticated\n    if (token) {\n      fetch(\"/api/tasks\", {\n        headers: {\n          \"Authorization\": `Bearer ${token}`\n        }\n      }).then(res => res.json()).then(data => {\n        setTasks(data.tasks);\n      }).catch(error => {\n        console.error(\"Error fetching tasks:\", error);\n        // Handle token expiration or invalid token\n        if (error.status === 401) {\n          setIsAuthenticated(false);\n          localStorage.removeItem('token');\n        }\n      });\n    }\n  }, [token]);\n\n  // Handle login\n  const handleLogin = async credentials => {\n    const response = await fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    });\n    if (response.ok) {\n      const data = await response.json();\n      const jwtToken = data.access_token;\n\n      // Store the token and update the state\n      localStorage.setItem('token', jwtToken);\n      setToken(jwtToken);\n      setIsAuthenticated(true);\n    } else {\n      console.error(\"Login failed\");\n    }\n  };\n\n  // Handle registration\n  const handleRegister = async credentials => {\n    const response = await fetch(\"http://localhost:5000/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    });\n    if (response.ok) {\n      // If registration is successful, log the user in automatically\n      const data = await response.json();\n      const jwtToken = data.access_token;\n\n      // Store the token and update the state\n      localStorage.setItem('token', jwtToken);\n      setToken(jwtToken);\n      setIsAuthenticated(true);\n    } else {\n      console.error(\"Registration failed\");\n    }\n  };\n  const handleLogout = () => {\n    // Clear token from localStorage and reset state\n    localStorage.removeItem('token');\n    setToken(null);\n    setIsAuthenticated(false);\n    setTasks([]);\n  };\n  const addTask = async task => {\n    const response = await fetch(\"/api/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      },\n      body: JSON.stringify(task)\n    });\n    if (response.ok) {\n      const newTask = await response.json();\n      setTasks(prevTasks => [...prevTasks, newTask]);\n    } else {\n      console.error(\"Failed to add task\");\n    }\n  };\n  const deleteTask = async taskId => {\n    const response = await fetch(`/api/tasks/${taskId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n    if (response.ok) {\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n    } else {\n      console.error(\"Failed to delete task\");\n    }\n  };\n  const completeTask = async taskId => {\n    const response = await fetch(`/tasks/${taskId}/complete`, {\n      method: \"PUT\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n    if (response.ok) {\n      setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n        ...task,\n        completed: true\n      } : task));\n    } else {\n      console.error(\"Failed to complete task\");\n    }\n  };\n  const editTask = async (taskId, editedTask) => {\n    const updatedTask = {\n      description: editedTask.description,\n      priority: editedTask.priority,\n      category: editedTask.category,\n      deadline: editedTask.deadline\n    };\n    const response = await fetch(`/api/tasks/${taskId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      },\n      body: JSON.stringify(updatedTask)\n    });\n    if (response.ok) {\n      const updatedTaskFromServer = await response.json();\n      setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? updatedTaskFromServer.task : task));\n    } else {\n      console.error(\"Failed to update task\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), !isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: showLogin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(LoginForm, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowLogin(false),\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(RegisterForm, {\n          onRegister: handleRegister\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowLogin(true),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n        tasks: tasks,\n        deleteTask: deleteTask,\n        completeTask: completeTask,\n        editTask: editTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"saQwmVsiDoYDwseh29WcFVGR9qo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ToDoForm","ToDoList","LoginForm","RegisterForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tasks","setTasks","isAuthenticated","setIsAuthenticated","token","setToken","localStorage","getItem","showLogin","setShowLogin","fetch","headers","then","res","json","data","catch","error","console","status","removeItem","handleLogin","credentials","response","method","body","JSON","stringify","ok","jwtToken","access_token","setItem","handleRegister","handleLogout","addTask","task","newTask","prevTasks","deleteTask","taskId","filter","id","completeTask","map","completed","editTask","editedTask","updatedTask","description","priority","category","deadline","updatedTaskFromServer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onClick","onRegister","_c","$RefreshReg$"],"sources":["/Users/landy/Desktop/selfProject/toDoList_project/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport ToDoForm from \"./components/ToDoForm\";\nimport ToDoList from \"./components/ToDoList\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegisterForm from \"./components/RegistrationForm\"; \n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [showLogin, setShowLogin] = useState(true);  // State to toggle between login and register forms\n\n  useEffect(() => {\n    // Fetch tasks from the Flask API only if authenticated\n    if (token) {\n      fetch(\"/api/tasks\", {\n        headers: {\n          \"Authorization\": `Bearer ${token}`,\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setTasks(data.tasks);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching tasks:\", error);\n          // Handle token expiration or invalid token\n          if (error.status === 401) {\n            setIsAuthenticated(false);\n            localStorage.removeItem('token');\n          }\n        });\n    }\n  }, [token]);\n\n  // Handle login\n  const handleLogin = async (credentials) => {\n    const response = await fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(credentials),\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      const jwtToken = data.access_token;\n\n      // Store the token and update the state\n      localStorage.setItem('token', jwtToken);\n      setToken(jwtToken);\n      setIsAuthenticated(true);\n    } else {\n      console.error(\"Login failed\");\n    }\n  };\n\n  // Handle registration\n  const handleRegister = async (credentials) => {\n    const response = await fetch(\"http://localhost:5000/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(credentials),\n    });\n\n    if (response.ok) {\n      // If registration is successful, log the user in automatically\n      const data = await response.json();\n      const jwtToken = data.access_token;\n\n      // Store the token and update the state\n      localStorage.setItem('token', jwtToken);\n      setToken(jwtToken);\n      setIsAuthenticated(true);\n    } else {\n      console.error(\"Registration failed\");\n    }\n  };\n\n  const handleLogout = () => {\n    // Clear token from localStorage and reset state\n    localStorage.removeItem('token');\n    setToken(null);\n    setIsAuthenticated(false);\n    setTasks([]);\n  };\n\n  const addTask = async (task) => {\n    const response = await fetch(\"/api/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`,\n      },\n      body: JSON.stringify(task),\n    });\n\n    if (response.ok) {\n      const newTask = await response.json();\n      setTasks((prevTasks) => [...prevTasks, newTask]);\n    } else {\n      console.error(\"Failed to add task\");\n    }\n  };\n\n  const deleteTask = async (taskId) => {\n    const response = await fetch(`/api/tasks/${taskId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n      },\n    });\n\n    if (response.ok) {\n      setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\n    } else {\n      console.error(\"Failed to delete task\");\n    }\n  };\n\n  const completeTask = async (taskId) => {\n    const response = await fetch(`/tasks/${taskId}/complete`, {\n      method: \"PUT\",\n      headers: {\n        \"Authorization\": `Bearer ${token}`,\n      },\n    });\n\n    if (response.ok) {\n      setTasks((prevTasks) =>\n        prevTasks.map((task) =>\n          task.id === taskId ? { ...task, completed: true } : task\n        )\n      );\n    } else {\n      console.error(\"Failed to complete task\");\n    }\n  };\n\n  const editTask = async (taskId, editedTask) => {\n    const updatedTask = {\n      description: editedTask.description,\n      priority: editedTask.priority,\n      category: editedTask.category,\n      deadline: editedTask.deadline,\n    };\n\n    const response = await fetch(`/api/tasks/${taskId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`,\n      },\n      body: JSON.stringify(updatedTask),\n    });\n\n    if (response.ok) {\n      const updatedTaskFromServer = await response.json();\n      setTasks((prevTasks) =>\n        prevTasks.map((task) =>\n          task.id === taskId ? updatedTaskFromServer.task : task\n        )\n      );\n    } else {\n      console.error(\"Failed to update task\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>ToDo List</h1>\n      {!isAuthenticated ? (\n        <>\n          {showLogin ? (\n            <>\n              <LoginForm onLogin={handleLogin} />\n              <p>\n                Don't have an account?{\" \"}\n                <button onClick={() => setShowLogin(false)}>\n                  Register\n                </button>\n              </p>\n            </>\n          ) : (\n            <>\n              <RegisterForm onRegister={handleRegister} />\n              <p>\n                Already have an account?{\" \"}\n                <button onClick={() => setShowLogin(true)}>\n                  Login\n                </button>\n              </p>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <button onClick={handleLogout}>Logout</button>\n          <ToDoForm addTask={addTask} />\n          <ToDoList\n            tasks={tasks}\n            deleteTask={deleteTask}\n            completeTask={completeTask}\n            editTask={editTask}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}