{"ast":null,"code":"var _jsxFileName = \"/Users/landy/Desktop/selfProject/toDoList_project/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport ToDoForm from \"./components/ToDoForm\";\nimport ToDoList from \"./components/ToDoList\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegisterForm from \"./components/RegistrationForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [showLogin, setShowLogin] = useState(true);\n\n  // Fetch tasks only when authenticated\n  useEffect(() => {\n    const fetchTasks = async () => {\n      if (!token) return;\n      try {\n        const response = await fetch(\"/api/tasks\", {\n          headers: {\n            \"Authorization\": `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          if (response.status === 401) {\n            setIsAuthenticated(false);\n            localStorage.removeItem('token');\n            return;\n          }\n          throw new Error(`Failed to fetch tasks: ${response.statusText}`);\n        }\n        const data = await response.json();\n        setTasks(data.tasks);\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n    fetchTasks();\n  }, [token]);\n\n  // Handle login\n  const handleLogin = async credentials => {\n    try {\n      const response = await fetch(\"/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(credentials)\n      });\n      if (!response.ok) throw new Error(\"Login failed\");\n      const data = await response.json();\n      const jwtToken = data.access_token;\n      localStorage.setItem('token', jwtToken);\n      setToken(jwtToken);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error(\"Login error:\", error);\n    }\n  };\n\n  // Handle registration\n  const handleRegister = async credentials => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:3000/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(credentials)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(`Registration failed: ${data.message}`);\n      }\n      console.log('Registration successful:', data);\n    } catch (error) {\n      console.error('Registration error:', error);\n    }\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setIsAuthenticated(false);\n    setTasks([]);\n  };\n\n  // Add a new task\n  const addTask = async task => {\n    try {\n      const response = await fetch(\"/api/tasks\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(task)\n      });\n      if (!response.ok) throw new Error(\"Failed to add task\");\n      const newTask = await response.json();\n      setTasks(prevTasks => [...prevTasks, newTask]);\n    } catch (error) {\n      console.error(\"Add task error:\", error);\n    }\n  };\n\n  // Delete a task\n  const deleteTask = async taskId => {\n    try {\n      const response = await fetch(`/api/tasks/${taskId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error(\"Failed to delete task\");\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error(\"Delete task error:\", error);\n    }\n  };\n\n  // Complete a task\n  const completeTask = async taskId => {\n    try {\n      const response = await fetch(`/tasks/${taskId}/complete`, {\n        method: \"PUT\",\n        headers: {\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      if (!response.ok) throw new Error(\"Failed to complete task\");\n      setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n        ...task,\n        completed: true\n      } : task));\n    } catch (error) {\n      console.error(\"Complete task error:\", error);\n    }\n  };\n\n  // Edit a task\n  const editTask = async (taskId, editedTask) => {\n    try {\n      const response = await fetch(`/api/tasks/${taskId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify(editedTask)\n      });\n      if (!response.ok) throw new Error(\"Failed to update task\");\n      const updatedTaskFromServer = await response.json();\n      setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? updatedTaskFromServer.task : task));\n    } catch (error) {\n      console.error(\"Edit task error:\", error);\n    }\n  };\n\n  // Fetch test data\n  useEffect(() => {\n    const fetchTestData = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/test\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (!response.ok) throw new Error(`Failed to fetch test data: ${response.statusText}`);\n        const result = await response.json();\n        console.log(\"Test fetch result:\", result);\n      } catch (error) {\n        console.error(\"Test fetch error:\", error);\n      }\n    };\n    fetchTestData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), !isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: showLogin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(LoginForm, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowLogin(false),\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(RegisterForm, {\n          onRegister: handleRegister\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowLogin(true),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n        tasks: tasks,\n        deleteTask: deleteTask,\n        completeTask: completeTask,\n        editTask: editTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Cc6dM35af3WSLquuBt7jcK5dhQo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ToDoForm","ToDoList","LoginForm","RegisterForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tasks","setTasks","isAuthenticated","setIsAuthenticated","token","setToken","localStorage","getItem","showLogin","setShowLogin","fetchTasks","response","fetch","headers","ok","status","removeItem","Error","statusText","data","json","error","console","handleLogin","credentials","method","body","JSON","stringify","jwtToken","access_token","setItem","handleRegister","message","log","handleLogout","addTask","task","newTask","prevTasks","deleteTask","taskId","filter","id","completeTask","map","completed","editTask","editedTask","updatedTaskFromServer","fetchTestData","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onClick","onRegister","_c","$RefreshReg$"],"sources":["/Users/landy/Desktop/selfProject/toDoList_project/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport ToDoForm from \"./components/ToDoForm\";\nimport ToDoList from \"./components/ToDoList\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegisterForm from \"./components/RegistrationForm\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  const [showLogin, setShowLogin] = useState(true);\n  \n\n  // Fetch tasks only when authenticated\n  useEffect(() => {\n    const fetchTasks = async () => {\n      if (!token) return;\n      \n      try {\n        const response = await fetch(\"/api/tasks\", {\n          headers: {\n            \"Authorization\": `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          if (response.status === 401) {\n            setIsAuthenticated(false);\n            localStorage.removeItem('token');\n            return;\n          }\n          throw new Error(`Failed to fetch tasks: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n        setTasks(data.tasks);\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n\n    fetchTasks();\n  }, [token]);\n\n  \n\n  \n  // Handle login\n  const handleLogin = async (credentials) => {\n    try {\n      const response = await fetch(\"/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(credentials),\n      });\n\n      if (!response.ok) throw new Error(\"Login failed\");\n\n      const data = await response.json();\n      const jwtToken = data.access_token;\n\n      localStorage.setItem('token', jwtToken);\n      setToken(jwtToken);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error(\"Login error:\", error);\n    }\n  };\n\n  // Handle registration\n  const handleRegister = async (credentials) => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:3000/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(credentials),\n      });\n\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(`Registration failed: ${data.message}`);\n      }\n\n      console.log('Registration successful:', data);\n    } catch (error) {\n      console.error('Registration error:', error);\n    }\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setIsAuthenticated(false);\n    setTasks([]);\n  };\n\n  // Add a new task\n  const addTask = async (task) => {\n    try {\n      const response = await fetch(\"/api/tasks\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`,\n        },\n        body: JSON.stringify(task),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to add task\");\n\n      const newTask = await response.json();\n      setTasks((prevTasks) => [...prevTasks, newTask]);\n    } catch (error) {\n      console.error(\"Add task error:\", error);\n    }\n  };\n\n  // Delete a task\n  const deleteTask = async (taskId) => {\n    try {\n      const response = await fetch(`/api/tasks/${taskId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Authorization\": `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) throw new Error(\"Failed to delete task\");\n\n      setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\n    } catch (error) {\n      console.error(\"Delete task error:\", error);\n    }\n  };\n\n  // Complete a task\n  const completeTask = async (taskId) => {\n    try {\n      const response = await fetch(`/tasks/${taskId}/complete`, {\n        method: \"PUT\",\n        headers: {\n          \"Authorization\": `Bearer ${token}`,\n        },\n      });\n\n      if (!response.ok) throw new Error(\"Failed to complete task\");\n\n      setTasks((prevTasks) =>\n        prevTasks.map((task) =>\n          task.id === taskId ? { ...task, completed: true } : task\n        )\n      );\n    } catch (error) {\n      console.error(\"Complete task error:\", error);\n    }\n  };\n\n  // Edit a task\n  const editTask = async (taskId, editedTask) => {\n    try {\n      const response = await fetch(`/api/tasks/${taskId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`,\n        },\n        body: JSON.stringify(editedTask),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to update task\");\n\n      const updatedTaskFromServer = await response.json();\n      setTasks((prevTasks) =>\n        prevTasks.map((task) =>\n          task.id === taskId ? updatedTaskFromServer.task : task\n        )\n      );\n    } catch (error) {\n      console.error(\"Edit task error:\", error);\n    }\n  };\n\n  // Fetch test data\n  useEffect(() => {\n    const fetchTestData = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:5000/test\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (!response.ok) throw new Error(`Failed to fetch test data: ${response.statusText}`);\n\n        const result = await response.json();\n        console.log(\"Test fetch result:\", result);\n      } catch (error) {\n        console.error(\"Test fetch error:\", error);\n      }\n    };\n\n    fetchTestData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>ToDo List</h1>\n      {!isAuthenticated ? (\n        <>\n          {showLogin ? (\n            <>\n              <LoginForm onLogin={handleLogin} />\n              <p>\n                Don't have an account?{\" \"}\n                <button onClick={() => setShowLogin(false)}>Register</button>\n              </p>\n            </>\n          ) : (\n            <>\n              <RegisterForm onRegister={handleRegister} />\n              <p>\n                Already have an account?{\" \"}\n                <button onClick={() => setShowLogin(true)}>Login</button>\n              </p>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <button onClick={handleLogout}>Logout</button>\n          <ToDoForm addTask={addTask} />\n          <ToDoList\n            tasks={tasks}\n            deleteTask={deleteTask}\n            completeTask={completeTask}\n            editTask={editTask}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAACkB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;EACzE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;;EAGhD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMqB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI,CAACN,KAAK,EAAE;MAEZ,IAAI;QACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;UACzCC,OAAO,EAAE;YACP,eAAe,EAAE,UAAUT,KAAK;UAClC;QACF,CAAC,CAAC;QAEF,IAAI,CAACO,QAAQ,CAACG,EAAE,EAAE;UAChB,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;YAC3BZ,kBAAkB,CAAC,KAAK,CAAC;YACzBG,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;YAChC;UACF;UACA,MAAM,IAAIC,KAAK,CAAC,0BAA0BN,QAAQ,CAACO,UAAU,EAAE,CAAC;QAClE;QAEA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCnB,QAAQ,CAACkB,IAAI,CAACnB,KAAK,CAAC;MACtB,CAAC,CAAC,OAAOqB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDX,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;;EAKX;EACA,MAAMmB,WAAW,GAAG,MAAOC,WAAW,IAAK;IACzC,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,EAAE;QACrCa,MAAM,EAAE,MAAM;QACdZ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAACb,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIG,KAAK,CAAC,cAAc,CAAC;MAEjD,MAAME,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,MAAMS,QAAQ,GAAGV,IAAI,CAACW,YAAY;MAElCxB,YAAY,CAACyB,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAAC;MACvCxB,QAAQ,CAACwB,QAAQ,CAAC;MAClB1B,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC;;EAED;EACA,MAAMW,cAAc,GAAG,MAAOR,WAAW,IAAK;IAC5C,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7Da,MAAM,EAAE,MAAM;QACdZ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW;MAClC,CAAC,CAAC;MAEF,MAAML,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,IAAI,CAACT,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIG,KAAK,CAAC,wBAAwBE,IAAI,CAACc,OAAO,EAAE,CAAC;MACzD;MAEAX,OAAO,CAACY,GAAG,CAAC,0BAA0B,EAAEf,IAAI,CAAC;IAC/C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;;EAED;EACA,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACzB7B,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCX,QAAQ,CAAC,IAAI,CAAC;IACdF,kBAAkB,CAAC,KAAK,CAAC;IACzBF,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;;EAED;EACA,MAAMmC,OAAO,GAAG,MAAOC,IAAI,IAAK;IAC9B,IAAI;MACF,MAAM1B,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACzCa,MAAM,EAAE,MAAM;QACdZ,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUT,KAAK;QAClC,CAAC;QACDsB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACS,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAI,CAAC1B,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIG,KAAK,CAAC,oBAAoB,CAAC;MAEvD,MAAMqB,OAAO,GAAG,MAAM3B,QAAQ,CAACS,IAAI,CAAC,CAAC;MACrCnB,QAAQ,CAAEsC,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC;IAClD,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACzC;EACF,CAAC;;EAED;EACA,MAAMmB,UAAU,GAAG,MAAOC,MAAM,IAAK;IACnC,IAAI;MACF,MAAM9B,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc6B,MAAM,EAAE,EAAE;QACnDhB,MAAM,EAAE,QAAQ;QAChBZ,OAAO,EAAE;UACP,eAAe,EAAE,UAAUT,KAAK;QAClC;MACF,CAAC,CAAC;MAEF,IAAI,CAACO,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIG,KAAK,CAAC,uBAAuB,CAAC;MAE1DhB,QAAQ,CAAEsC,SAAS,IAAKA,SAAS,CAACG,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACM,EAAE,KAAKF,MAAM,CAAC,CAAC;IACzE,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;;EAED;EACA,MAAMuB,YAAY,GAAG,MAAOH,MAAM,IAAK;IACrC,IAAI;MACF,MAAM9B,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAU6B,MAAM,WAAW,EAAE;QACxDhB,MAAM,EAAE,KAAK;QACbZ,OAAO,EAAE;UACP,eAAe,EAAE,UAAUT,KAAK;QAClC;MACF,CAAC,CAAC;MAEF,IAAI,CAACO,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIG,KAAK,CAAC,yBAAyB,CAAC;MAE5DhB,QAAQ,CAAEsC,SAAS,IACjBA,SAAS,CAACM,GAAG,CAAER,IAAI,IACjBA,IAAI,CAACM,EAAE,KAAKF,MAAM,GAAG;QAAE,GAAGJ,IAAI;QAAES,SAAS,EAAE;MAAK,CAAC,GAAGT,IACtD,CACF,CAAC;IACH,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;;EAED;EACA,MAAM0B,QAAQ,GAAG,MAAAA,CAAON,MAAM,EAAEO,UAAU,KAAK;IAC7C,IAAI;MACF,MAAMrC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAc6B,MAAM,EAAE,EAAE;QACnDhB,MAAM,EAAE,KAAK;QACbZ,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUT,KAAK;QAClC,CAAC;QACDsB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACoB,UAAU;MACjC,CAAC,CAAC;MAEF,IAAI,CAACrC,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIG,KAAK,CAAC,uBAAuB,CAAC;MAE1D,MAAMgC,qBAAqB,GAAG,MAAMtC,QAAQ,CAACS,IAAI,CAAC,CAAC;MACnDnB,QAAQ,CAAEsC,SAAS,IACjBA,SAAS,CAACM,GAAG,CAAER,IAAI,IACjBA,IAAI,CAACM,EAAE,KAAKF,MAAM,GAAGQ,qBAAqB,CAACZ,IAAI,GAAGA,IACpD,CACF,CAAC;IACH,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C;EACF,CAAC;;EAED;EACAhC,SAAS,CAAC,MAAM;IACd,MAAM6D,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMvC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;UACzDa,MAAM,EAAE,KAAK;UACbZ,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE,MAAM,IAAIG,KAAK,CAAC,8BAA8BN,QAAQ,CAACO,UAAU,EAAE,CAAC;QAEtF,MAAMiC,MAAM,GAAG,MAAMxC,QAAQ,CAACS,IAAI,CAAC,CAAC;QACpCE,OAAO,CAACY,GAAG,CAAC,oBAAoB,EAAEiB,MAAM,CAAC;MAC3C,CAAC,CAAC,OAAO9B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAC3C;IACF,CAAC;IAED6B,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvD,OAAA;IAAKyD,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1D,OAAA;MAAA0D,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjB,CAACvD,eAAe,gBACfP,OAAA,CAAAE,SAAA;MAAAwD,QAAA,EACG7C,SAAS,gBACRb,OAAA,CAAAE,SAAA;QAAAwD,QAAA,gBACE1D,OAAA,CAACH,SAAS;UAACkE,OAAO,EAAEnC;QAAY;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnC9D,OAAA;UAAA0D,QAAA,GAAG,wBACqB,EAAC,GAAG,eAC1B1D,OAAA;YAAQgE,OAAO,EAAEA,CAAA,KAAMlD,YAAY,CAAC,KAAK,CAAE;YAAA4C,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC;MAAA,eACJ,CAAC,gBAEH9D,OAAA,CAAAE,SAAA;QAAAwD,QAAA,gBACE1D,OAAA,CAACF,YAAY;UAACmE,UAAU,EAAE5B;QAAe;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5C9D,OAAA;UAAA0D,QAAA,GAAG,0BACuB,EAAC,GAAG,eAC5B1D,OAAA;YAAQgE,OAAO,EAAEA,CAAA,KAAMlD,YAAY,CAAC,IAAI,CAAE;YAAA4C,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC;MAAA,eACJ;IACH,gBACD,CAAC,gBAEH9D,OAAA,CAAAE,SAAA;MAAAwD,QAAA,gBACE1D,OAAA;QAAQgE,OAAO,EAAExB,YAAa;QAAAkB,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9C9D,OAAA,CAACL,QAAQ;QAAC8C,OAAO,EAAEA;MAAQ;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9B9D,OAAA,CAACJ,QAAQ;QACPS,KAAK,EAAEA,KAAM;QACbwC,UAAU,EAAEA,UAAW;QACvBI,YAAY,EAAEA,YAAa;QAC3BG,QAAQ,EAAEA;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA,eACF,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1D,EAAA,CAjPQD,GAAG;AAAA+D,EAAA,GAAH/D,GAAG;AAmPZ,eAAeA,GAAG;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}